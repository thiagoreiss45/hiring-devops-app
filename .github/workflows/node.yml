name: Build, Push, and Deploy to ECR and ECS

on:
  push:
    branches:
      - main  # Change to your main branch name

env:
  ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
  ECS_CLUSTER: ${{ secrets.AWS_ECS_CLUSTER }}
  ECS_SERVICE: ${{ secrets.AWS_ECS_SERVICE }}

jobs:
  build_push_deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      
      - name: Build, tag, and push docker image to Amazon ECR Public
        id: build-image
        # env:
        #   REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        #   REGISTRY_ALIAS: my-ecr-public-registry-alias
        #   REPOSITORY: meteor-hiring-thiago-repo
        #   IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t meteor-hiring-thiago-repo .
          docker tag meteor-hiring-thiago-repo:latest public.ecr.aws/t8y4c8l7/meteor-hiring-thiago-repo:latest
          docker push ${{ secrets.AWS_ECR_REPOSITORY }}:latest

      - name: Update ECS Service
        run: |
          ecs deploy ${{ secrets.AWS_ECS_CLUSTER }} ${{ secrets.AWS_ECS_SERVICE }} --image ${{ steps.build-image.outputs.image }}
      # - name: Build and Push Docker image to ECR
      #   run: |
      #     docker build -t $ECR_REPOSITORY:${{ github.sha }} .
      #     docker tag $ECR_REPOSITORY:${{ github.sha }} $ECR_REPOSITORY:latest
      #     docker push $ECR_REPOSITORY:${{ github.sha }}
      #     docker push $ECR_REPOSITORY:latest

      # - name: Update ECS Service
      #   run: |
      #     ecs deploy $ECS_CLUSTER $ECS_SERVICE --image $ECR_REPOSITORY:${{ github.sha }}
